name: Feature Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-features:
    name: Test Feature Combinations
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - name: "types-only"
            args: "--no-default-features --features types"
          - name: "sync-client"
            args: "--no-default-features --features sync-client"
          - name: "async-client"  
            args: "--no-default-features --features async-client"
          - name: "sync-and-async"
            args: "--no-default-features --features sync-client,async-client"
          - name: "all-features"
            args: ""  # Default includes all features
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Build library with ${{ matrix.features.name }}
      run: cargo build --lib ${{ matrix.features.args }}
    
    - name: Build examples with ${{ matrix.features.name }}
      if: matrix.features.name != 'types-only'
      run: cargo build --examples ${{ matrix.features.args }}
    
    - name: Test with ${{ matrix.features.name }}
      run: cargo test --lib ${{ matrix.features.args }}
    
    - name: Check with ${{ matrix.features.name }}
      run: cargo check --lib ${{ matrix.features.args }}
    
    - name: Clippy with ${{ matrix.features.name }}
      run: cargo clippy --lib ${{ matrix.features.args }} -- -D warnings

  wasm-compatibility:
    name: Test WASM Compatibility
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust with WASM target
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
    
    - name: Build types-only for WASM
      run: cargo build --target wasm32-unknown-unknown --no-default-features --features types
    
    - name: Check WASM compatibility
      run: cargo check --target wasm32-unknown-unknown --no-default-features --features types